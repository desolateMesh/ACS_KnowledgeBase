{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure."
      },
      "minLength": 3,
      "maxLength": 61
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (100 or less)."
      },
      "minValue": 1,
      "maxValue": 100,
      "defaultValue": 3
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the virtual machine."
      },
      "defaultValue": "Standard_D2s_v3"
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual network."
      },
      "defaultValue": "vnet"
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Name of the subnet."
      },
      "defaultValue": "subnet"
    },
    "networkSecurityGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name of the network security group."
      },
      "defaultValue": "nsg"
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Publisher of the VM image."
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Offer of the VM image."
      }
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "2022-datacenter-azure-edition",
      "metadata": {
        "description": "SKU of the VM image."
      }
    },
    "imageVersion": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "Version of the VM image."
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "[concat(parameters('vmssName'), '-appinsights')]",
      "metadata": {
        "description": "Name of the Application Insights resource."
      }
    },
    "workspaceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('vmssName'), '-workspace')]",
      "metadata": {
        "description": "Name of the Log Analytics workspace."
      }
    },
    "healthProbePort": {
      "type": "int",
      "defaultValue": 80,
      "metadata": {
        "description": "Port to use for load balancer health probes and network load balancing."
      }
    },
    "singlePlacementGroup": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "When true this limits the scale set to a single placement group, of max size 100 virtual machines."
      }
    },
    "loadBalancerName": {
      "type": "string",
      "defaultValue": "[concat(parameters('vmssName'), '-lb')]",
      "metadata": {
        "description": "Name of the load balancer."
      }
    },
    "frontEndIpConfigurationName": {
      "type": "string",
      "defaultValue": "frontendIpConfig",
      "metadata": {
        "description": "Name of the front end IP configuration."
      }
    }
  },
  "variables": {
    "addressPrefix": "10.0.0.0/16",
    "subnetPrefix": "10.0.0.0/24",
    "vmssId": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]",
    "lbFrontEndIpConfigurationId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('loadBalancerName'), parameters('frontEndIpConfigurationName'))]",
    "lbBackEndPoolName": "bepool",
    "lbInboundNatPoolName": "natpool",
    "publicIPAddressName": "[concat(parameters('vmssName'), '-pip')]",
    "autoScaleSettingsName": "[concat(parameters('vmssName'), '-autoscale')]",
    "healthProbeName": "healthprobe",
    "osType": {
      "publisher": "[parameters('imagePublisher')]",
      "offer": "[parameters('imageOffer')]",
      "sku": "[parameters('imageSku')]",
      "version": "[parameters('imageVersion')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-05-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow-http",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "allow-https",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1001,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[toLower(parameters('vmssName'))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2021-05-01",
      "name": "[parameters('loadBalancerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[parameters('frontEndIpConfigurationName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('lbBackEndPoolName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "http",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbFrontEndIpConfigurationId')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), variables('lbBackEndPoolName'))]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', parameters('loadBalancerName'), variables('healthProbeName'))]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('healthProbeName')]",
            "properties": {
              "protocol": "Tcp",
              "port": "[parameters('healthProbePort')]",
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('lbInboundNatPoolName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('lbFrontEndIpConfigurationId')]"
              },
              "protocol": "Tcp",
              "frontendPortRangeStart": 50000,
              "frontendPortRangeEnd": 50099,
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[parameters('workspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2023-03-01",
      "name": "[parameters('vmssName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('vmSize')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
      ],
      "properties": {
        "overprovision": true,
        "upgradePolicy": {
          "mode": "Automatic",
          "automaticOSUpgradePolicy": {
            "enableAutomaticOSUpgrade": true,
            "useRollingUpgradePolicy": true
          },
          "rollingUpgradePolicy": {
            "maxBatchInstancePercent": 20,
            "maxUnhealthyInstancePercent": 20,
            "maxUnhealthyUpgradedInstancePercent": 20,
            "pauseTimeBetweenBatches": "PT0S"
          }
        },
        "singlePlacementGroup": "[parameters('singlePlacementGroup')]",
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "Premium_LRS"
              }
            },
            "imageReference": "[variables('osType')]"
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[concat(parameters('vmssName'), 'Nic')]",
                "properties": {
                  "primary": true,
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                  },
                  "ipConfigurations": [
                    {
                      "name": "[concat(parameters('vmssName'), 'IpConfig')]",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancerName'), variables('lbBackEndPoolName'))]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', parameters('loadBalancerName'), variables('lbInboundNatPoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "HealthExtension",
                "properties": {
                  "publisher": "Microsoft.ManagedServices",
                  "type": "ApplicationHealthWindows",
                  "typeHandlerVersion": "1.0",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "protocol": "tcp",
                    "port": "[parameters('healthProbePort')]"
                  }
                }
              },
              {
                "name": "CustomScriptExtension",
                "properties": {
                  "publisher": "Microsoft.Compute",
                  "type": "CustomScriptExtension",
                  "typeHandlerVersion": "1.10",
                  "autoUpgradeMinorVersion": true,
                  "settings": {
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File setup-web.ps1 -AppInsightsKey ', reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))).InstrumentationKey)]"
                  }
                }
              }
            ]
          }
        },
        "automaticRepairsPolicy": {
          "enabled": true,
          "gracePeriod": "PT30M"
        }
      }
    },
    {
      "type": "Microsoft.Insights/autoscalesettings",
      "apiVersion": "2022-10-01",
      "name": "[variables('autoScaleSettingsName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]"
      ],
      "properties": {
        "name": "[variables('autoScaleSettingsName')]",
        "targetResourceUri": "[variables('vmssId')]",
        "enabled": true,
        "profiles": [
          {
            "name": "DefaultProfile",
            "capacity": {
              "minimum": "2",
              "maximum": "10",
              "default": "3"
            },
            "rules": [
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "microsoft.compute/virtualmachinescalesets",
                  "metricResourceUri": "[variables('vmssId')]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "GreaterThan",
                  "threshold": 70
                },
                "scaleAction": {
                  "direction": "Increase",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT5M"
                }
              },
              {
                "metricTrigger": {
                  "metricName": "Percentage CPU",
                  "metricNamespace": "microsoft.compute/virtualmachinescalesets",
                  "metricResourceUri": "[variables('vmssId')]",
                  "timeGrain": "PT1M",
                  "statistic": "Average",
                  "timeWindow": "PT5M",
                  "timeAggregation": "Average",
                  "operator": "LessThan",
                  "threshold": 30
                },
                "scaleAction": {
                  "direction": "Decrease",
                  "type": "ChangeCount",
                  "value": "1",
                  "cooldown": "PT5M"
                }
              }
            ]
          }
        ],
        "predictiveAutoscalePolicy": {
          "scaleMode": "Enabled",
          "scaleLookAheadTime": "PT10M"
        },
        "notifications": [
          {
            "operation": "Scale",
            "email": {
              "sendToSubscriptionAdministrator": true,
              "sendToSubscriptionCoAdministrators": false,
              "customEmails": []
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "vmssName": {
      "type": "string",
      "value": "[parameters('vmssName')]"
    },
    "publicIPAddressFQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn]"
    },
    "applicationInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', parameters('applicationInsightsName'))).InstrumentationKey]"
    }
  }
}